Fault handler for SIGSEGV, SIGFPE, SIGBUS and SIGILL signals: display the
Python backtrace and restore the previous handler. Allocate an alternate stack
for this handler, if sigaltstack() is available, to be able to allocate memory
on the stack, even on stack overflow.

Website: http://github.com/haypo/faulthandler/


Changelog
=========

 * 2010-12-24: Version 1.0


Status
======

 * 2010-12-24: Tested with Python 2.6, 3.1 and 3.2 on Debian Sid
 * 2010-12-24: Tested with Python 2.6 and 3.1 on Windows XP


Similar projects
================

Application fault handlers:

 * The GNU libc has a fault handler in debug/segfault.c
 * XEmacs has a fault handler displaying the Lisp backtrace
 * RPy has a fault handler

System-wide fault handlers:

 * Ubuntu uses Apport: https://wiki.ubuntu.com/Apport
 * The Linux kernel logs also segfaults into /var/log/kern.log (and
  /var/log/syslog). /proc/sys/kernel/core_pattern contols how coredumps are
  created.
 * Windows opens a popup on a fatal error asking if the error should be
   reported to Microsoft


See also
========

 * http://bugs.python.org/issue8863 (may 2010):
   Display Python backtrace on SIGSEGV, SIGFPE and fatal error
 * http://bugs.python.org/issue3999 (sept. 2009):
   Real segmentation fault handler

